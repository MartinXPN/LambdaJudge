AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for LambdaJudge

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 300
    MemorySize: 1769
    Runtime: python3.9


Resources:
  # Execution roles
  EqualityCheckerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: EqualityCheckerPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                  - 's3-object-lambda:*'
                  - 'cloudformation:Get*'
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogGroups'
                  - 'lambda:*'
                  - 'cloudwatch:ListMetrics'
                  - 'cloudwatch:GetMetricData'
                Resource: '*'
  ContestantRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ContestantLogPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
        - PolicyName: ContestantNetworkPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DetachNetworkInterface'
                Resource: '*'
        - PolicyName: ContestantElasticFileSystemPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'elasticfilesystem:ClientMount'
                  - 'elasticfilesystem:ClientRootAccess'
                  - 'elasticfilesystem:ClientWrite'
                  - 'elasticfilesystem:DescribeMountTargets'
                Resource: '*'

  # VPC, Subnet, EFS config
  # source: https://github.com/aws-samples/aws-lambda-efs-samples/blob/master/1-setup/create-efs-cfn.yml
  CodeRunnerVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/28
      EnableDnsHostnames: False
      EnableDnsSupport: True

  CodeRunnerSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 192.168.0.0/28
      VpcId: !Ref CodeRunnerVPC
      AvailabilityZone: "us-east-1a"

  FileSystemResource:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      PerformanceMode: generalPurpose  # generalPurpose | maxIO
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: JudgeFS
      FileSystemPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "elasticfilesystem:ClientMount"
            Principal:
              AWS: "*"

  CodeRunnerMountTarget:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystemResource
      SubnetId: !Ref CodeRunnerSubnet
      SecurityGroups:
        - !GetAtt CodeRunnerVPC.DefaultSecurityGroup

  AccessPointResource:
    Type: 'AWS::EFS::AccessPoint'
    Properties:
      FileSystemId: !Ref FileSystemResource
      PosixUser:
        Uid: "1000"
        Gid: "1000"
      RootDirectory:
        CreationInfo:
          OwnerGid: "1000"
          OwnerUid: "1000"
          Permissions: "0777"
        Path: "/mnt/efs"


  # Lambda Functions
  EqualityChecker:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: EqualityChecker
      MemorySize: 256
      CodeUri: checkers/
      Handler: app.equality_checker_lambda
      Role: !GetAtt EqualityCheckerRole.Arn
      Events:
        Check:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /check
            Method: post

  CodeRunnerPython:
    Type: AWS::Serverless::Function
    DependsOn: CodeRunnerMountTarget
    Properties:
      FunctionName: CodeRunnerPython
      CodeUri: coderunners/
      Handler: app.run_code_lambda
      Role: !GetAtt ContestantRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt CodeRunnerVPC.DefaultSecurityGroup
        SubnetIds:
          - !Ref CodeRunnerSubnet
      FileSystemConfigs:
        - Arn: !GetAtt AccessPointResource.Arn
          LocalMountPath: "/mnt/efs"

  GCCLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
        LayerName: gcc
        Description: GCC with dependencies
        ContentUri: layers/gcc.zip
        CompatibleRuntimes:
        RetentionPolicy: Retain

  CodeRunnerCpp:
    Type: AWS::Serverless::Function
    DependsOn: CodeRunnerMountTarget
    Properties:
      FunctionName: CodeRunnerCpp
      CodeUri: coderunners/
      Handler: app.run_code_lambda
      Role: !GetAtt ContestantRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt CodeRunnerVPC.DefaultSecurityGroup
        SubnetIds:
          - !Ref CodeRunnerSubnet
      FileSystemConfigs:
        - Arn: !GetAtt AccessPointResource.Arn
          LocalMountPath: "/mnt/efs"
      Layers:
        - !Ref GCCLayer

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Check:
    Description: "API Gateway endpoint URL for Prod stage for EqualityChecker function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/check/"
  EqualityChecker:
    Description: "AWS Lambda checker for determining if the output of a code is exactly the same es the target"
    Value: !GetAtt EqualityChecker.Arn
  CodeRunnerPython:
    Description: "AWS Lambda for executing a python code and getting the outputs"
    Value: !GetAtt CodeRunnerPython.Arn
  CodeRunnerCpp:
    Description: "AWS Lambda for executing a C++ code and getting the outputs"
    Value: !GetAtt CodeRunnerCpp.Arn
